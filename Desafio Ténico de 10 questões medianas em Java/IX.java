// Questão 9: Implemente um algoritmo para encontrar o maior número de pontos em uma linha reta em um plano cartesiano.
public class MaxPointsOnALine {
    public int maxPoints(int[][] points) {
        if (points == null) return 0;
        if (points.length <= 2) return points.length;
        int max = 0;
        for (int i = 0; i < points.length; i++) {
            Map<String, Integer> map = new HashMap<>();
            int duplicates = 1;
            for (int j = i + 1; j < points.length; j++) {
                int x1 = points[i][0], y1 = points[i][1];
                int x2 = points[j][0], y2 = points[j][1];
                if (x1 == x2 &&[_{{{CITATION{{{_1{](https://github.com/Sandeep-AnilKumar/Java-Leetcode-Solutions/tree/47d740e50366d7d3c396a78512e7f194dc6090e7/src%2FTrees%2FisBalanced.java)[_{{{CITATION{{{_2{](https://github.com/GaoLeiQin/LeetCode/tree/25d3fc3307f18a4dafeab70882e40b8a29ba423d/src%2Fmain%2Fjava%2Fcom%2Fhappy%2FMaxPathSumTree124.java)[_{{{CITATION{{{_3{](https://github.com/weitingyuk/LeetCode-Notes-Waiting/tree/3c46fb1ce43f6ff26a5cad913d0d281047bd4f28/2021-03-26%2FMaxPathSum124.java)[_{{{CITATION{{{_4{](https://github.com/hihihiman/leetcode/tree/e108340aa86c866e550ec7c07201d7cf2374d180/leetcode%2Feditor%2Fcn%2F%5B124%5D%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%AF%E5%BE%84%E5%92%8C.java)[_{{{CITATION{{{_5{](https://github.com/heathjay/niuke/tree/ad3e82ddf9aac2e718d77571f2191815ce1bd44d/Leetcode-2%2F94-%E4%BA%8C%E5%8F%89%E6%A0%91%2F124-%E4%BA%8C%E5%8F%89%E6%A0%91%E6%9C%80%E5%A4%A7%E8%B7%AF%E5%BE%84%E5%92%8C%2FSolution.java)[_{{{CITATION{{{_6{](https://github.com/lwg0452/algorithm1/tree/c523cf5aadfd8db9a0ace54efc90da3d1dea015d/src%2Frecursion%2Fand%2Fdevide%2Fand%2Fconquer%2F_53MaximumSubarray%2FSolution2.java)[_{{{CITATION{{{_7{](https://github.com/HXY-0227/data-structures/tree/79c794b93e5ca7e81511d92d532bb41bd8d80bfb/src%2Fcom%2Fleetcode%2FSolution53.java)[_{{{CITATION{{{_8{](https://github.com/HectorZarate/java-interview/tree/4534cc98121419f1b4b60429d317edb55408375e/com.javainterview%2Fsrc%2Fmain%2Fjava%2FMaximumSubarray.java)[_{{{CITATION{{{_9{](https://github.com/manisha069/HacktoberFest21/tree/d27493e35d75bdfe856f4becf988c488587c6287/Algorithms%2FJAVA%2FLongestPalindromicSubstring.java)[_{{{CITATION{{{_10{](https://github.com/BenjaminSong90/leetcode/tree/811bec394746c65537ffef555cd95f9bf0ebf310/src%2FLongestPalindrome.java)[_{{{CITATION{{{_11{](https://github.com/2462612540/LeetCode/tree/59b27411dc82e482950d3f141bfd6886124296b5/src%2Fmain%2Fjava%2F%E7%89%9B%E5%AE%A2%E7%BD%91%E5%90%8D%E4%BC%81%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95%E9%A2%982020%2F%E6%9C%80%E9%95%BF%E7%9A%84%E5%9B%9E%E6%96%87%E5%AD%97%E4%B8%B2.java)[_{{{CITATION{{{_12{](https://github.com/Jessio-J/Algorithm/tree/2bf0fa6dddb72fe55cfbc2a1882a492966ec8b6d/src%2FP1TO50%2FP5%2FP5_LongestPalindromicSubstring2.java)[_{{{CITATION{{{_13{](https://github.com/mprahlad95/Leetcode/tree/873f369a07b5a7567c19941c0a7902f72b596a24/src%2FMedium%2FLongestPalindromicSubstring.java)[_{{{CITATION{{{_14{](https://github.com/hk9984/Leetcode/tree/5f7584a3256ad3205cca012295db8880f741c364/leetcode5_longestPalindromicSubstring.java)[_{{{CITATION{{{_15{](https://github.com/ashwin-bhide/leetcode/tree/84963fc6538b00b881e2c901fb5a16f912dafd6b/longestPalindromicSubstring.java)[_{{{CITATION{{{_16{](https://github.com/kangpeiqin/blog/tree/5e019934fc0db16ba25ce06666b354023a503d71/notes%2F%E7%AE%97%E6%B3%95.md)[_{{{CITATION{{{_17{](https://github.com/imabdul/InterviewCookies/tree/2955d18609b2158fb26fb390762d0ce7094cab79/src%2FAlgos%2FArrays%2FMatrix%2Fdfs%2FNumberOfIslands.java)[_{{{CITATION{{{_18{](https://github.com/jaxas2018/COVID2019/tree/724eaaba23775b723ebf3c5665852cec5e598c7a/Leedcoe300%2Fsrc%2FArrays%2FNumber_Islands_200M.java)[_{{{CITATION{{{_19{](https://github.com/Dwyane-csy/CsyNotes/tree/56fb19e9c54f33431fb2655f08556fdd765771b2/leetcode%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF.md)[_{{{CITATION{{{_20{](https://github.com/adabade1/ShortCodingChallenges/tree/f8ef3bc3fe7b5acd76c85f794ed6308a4b7cdce6/NumberOfIslands.java)[_{{{CITATION{{{_21{](https://github.com/algorithm007-class02/algorithm007-class02/tree/af8b1afe6a4b7f4262892269ee882f40a4d1b6aa/Week_04%2FG20200343040206%2FLeetCode_200_0206.java)[_{{{CITATION{{{_22{](https://github.com/Lingzst/leetcode/tree/610a6d3fa61054fb8e509c7c4e4fd38110b981d5/src%2FLC_200_NumberofIslands.java)[_{{{CITATION{{{_23{](https://github.com/MJP32/CodingInterviewProblems/tree/4e63ef308e380f0e1644da3473c383ad95bdfbe4/src%2FLeetcode%2Ftopic%2Frecursion%2Fislands%2FLC200_NumberIslands.java)[_{{{CITATION{{{_24{](https://github.com/mahajanshruti2509/leetcode-solutions/tree/d69328426c49595c0c303f8c2454882178634a52/NumberOfIslands.java)[_{{{CITATION{{{_25{](https://github.com/Sukhdip-Sandhu/LeetCodeSolutions/tree/347e60f23c3f6e855f91a6c413de79f268f74e61/200.%20Number%20of%20Islands%2FSolution.java)[_{{{CITATION{{{_26{](https://github.com/kalpak92/DataStructures_Algorithms/tree/d67e5139255e40d524889a13ca75907d169a98a4/LeetCode%2F200.%20Number%20of%20Islands%2FSolution.java)[_{{{CITATION{{{_27{](https://github.com/HoqiheChen/LeetCode/tree/bb877dc333f5da912c8ee4db9c81c6438b42dade/code%2F1-100%2F019.Remove%20Nth%20Node%20From%20End%20of%20List.md)[_{{{CITATION{{{_28{](https://github.com/shalomalexander/Qprep/tree/cde4ce7f3e6b24b2904048af727d2bc1785fb9db/NumberOfIslands.java)[_{{{CITATION{{{_29{](https://github.com/zhaozixiao/pythonAlgoBook/tree/fc3140a09fa9d1efe10c13640c9d65de63a81385/leetcodeJava%2F400.md)[_{{{CITATION{{{_30{](https://github.com/chenyanghu/LeetcodeSolutions/tree/993a4722c160bc8fc9a1ba632628e6a6c80f3e09/329.longest-increasing-path-in-a-matrix.java)[_{{{CITATION{{{_31{](https://github.com/Pthinker/algorithm_java/tree/2454f8f8591996d1fca8b7426a905cb420b02873/leetcode%2Flongest-increasing-path-in-a-matrix.java)[_{{{CITATION{{{_32{](https://github.com/hanghang2333/leetcode/tree/028557298bbeed9b3596f9645b99d4262633c7cb/329.java)[_{{{CITATION{{{_33{](https://github.com/Nanour/Leetcode/tree/1bb68f2ceada69c0cb0d545158303b35a395d0b9/329_LongestIncreasingPathInAMatrix.java)[_{{{CITATION{{{_34{](https://github.com/hbulpf/LeetcodeEveryday/tree/c83a22d2b2112ff6e2335b0686d29ab4d90cba5e/code_java%2Fsrc%2Fsolution%2FLongestIncreasingPathInAMatrix.java)[_{{{CITATION{{{_35{](https://github.com/harlenVII/Leet/tree/a8991568c4a8b4e48ad4967fe629e1b72435efc7/329_longest_increasing_path_in_a_matrix.java)[_{{{CITATION{{{_36{](https://github.com/ijaz2020/PostCall/tree/ef69596befe97e5cd2481801fbb5a244dfd6df2f/src%2Fcom%2Fcp%2Fmatrix%2FMincost.java)[_{{{CITATION{{{_37{](https://github.com/tcsx/leetcodePractice/tree/d5f86b9a8a829ad91d267b301c2508784a624808/src%2FLC3.java)[_{{{CITATION{{{_38{](https://github.com/schen246/Algorithm-Coding/tree/06ef3567e9feb324d409fb659a2e471d492ae61b/LongestIncreasingPathInAMatrix.java)[_{{{CITATION{{{_39{](https://github.com/polaris905/Exercise-Algorithms/tree/6713da6bc9aa471e41d3b9e4afb0c2ff0e19e7a3/memo.md)[_{{{CITATION{{{_40{](https://github.com/xiaominyuan/LeetcodeEveryday/tree/7b8e51b82e62f38188a1aa79576ded819aa959df/src%2Fmain%2Fjava%2FbackTracking%2FlongestIncreasingPath329.java)[_{{{CITATION{{{_41{](https://github.com/JeyasinghAlex/Leet-Code-Challenge/tree/b7e610c0a7436c306787dea904ec10b3d3bef22c/LeetCodeOct_2021%2FLongestIncreasingPathInMatrix.java)[_{{{CITATION{{{_42{](https://github.com/TopCoderChen/codingContest/tree/2c8f4913ec219fefeac24554fa5ea5d7e3f3579d/src%2F%E5%85%AC%E5%8F%B8%E4%BB%AC%2FGG%E6%98%82%E8%B5%9B%2F%E5%87%A0%E4%BD%95%2F%E6%9C%80%E5%B0%8F%E9%9D%A2%E7%A7%AFRectangle2.java)